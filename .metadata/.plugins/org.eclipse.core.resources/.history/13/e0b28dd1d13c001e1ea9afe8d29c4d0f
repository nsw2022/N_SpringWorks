package aop_p.adv;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

// @Component 가능하지만 용어의 편의상으로 Service로 주로 사용
@Service
@Aspect
public class AnnoAdvice {
	
	@Before("execution(* aop_p.webToon..* (..))")
	void beforeee(JoinPoint joinPoint) {
		System.out.println(">>> beforeee:"+joinPoint.getSignature().toShortString());
	}
	
	//void afterrr(ProceedingJoinPoint joinPoint) {
	//ProceedingJoinPoint --> around 에서만 사용 가능
	void afterrr(JoinPoint joinPoint) {
		System.out.println(">>> afterrr:"+joinPoint.getSignature().toShortString());
	}
	
	void returnnn(JoinPoint joinPoint, Object qq) {
		System.out.println(">>> returnnn:"+joinPoint.getSignature().toShortString()+" =>"+qq);
	}
	
	void errrr(JoinPoint joinPoint, Throwable ee) {
		System.out.println(">>> errrr:"+joinPoint.getSignature().toShortString()+" =>"+ee.getMessage());
	}
	
}
